name: Node CI

on: [push, create]

jobs:
  build_for_mac_linux:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install @angular/cli
      run: npm install -g @angular/cli
    - name: Install electron-builder
      run: npm install -g electron-builder
    - name: Install node modules
      run: npm install
    - name: Build Angular app
      if: github.event_name == 'push'
      run: ng build --prod
    - name: Build Angular app for release [tag only]
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: sed "s/0.0.0/${TAG:1}/g" package.json > _package.json && mv _package.json package.json && ng build --prod
      env:
        TAG: ${{github.event.ref}}
    - name: Install node modules for electron app [tag only]
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: cd electron-app && npm install
    - name: Build Electron for release [tag only]
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: cd electron-app && sed "s/0.0.0/${TAG:1}/g" package.json > _package.json && mv _package.json package.json && electron-builder -ml --publish=never && ls dist
      env:
        TAG: ${{github.event.ref}}
        CSC_LINK: ${{secrets.MAC_CERT_BASE64}}
        CSC_KEY_PASSWORD: ${{secrets.CSC_KEY_PASSWORD}}
    - name: Create release [tag only]
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      with:
        files: |
          electron-app/dist/*.zip
          electron-app/dist/*.AppImage
          electron-app/dist/*.snap
          electron-app/dist/latest-mac.yml
          electron-app/dist/latest-linux.yml


  build_for_win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install @angular/cli
      run: npm install -g @angular/cli
    - name: Install electron-builder
      run: npm install -g electron-builder
    - name: Install node modules
      run: npm install
    - name: Build Angular app
      if: github.event_name == 'push'
      run: ng build --prod
    - name: Build Angular app for release [tag only]
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: $version = $Env:TAG.substring(1); sed "s/0.0.0/$version/g" package.json > _package.json; del package.json; ren _package.json package.json; ng build
      env:
        TAG: ${{github.event.ref}}
    - name: Install node modules for electron app [tag only]
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: cd electron-app; npm install
    - name: Build Electron for release [tag only]
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: cd electron-app; $version = $Env:TAG.substring(1); sed "s/0.0.0/$version/g" package.json > _package.json; del package.json; ren _package.json package.json; electron-builder -w --publish=never; ls dist
      env:
        TAG: ${{github.event.ref}}
        CSC_LINK: ${{secrets.MAC_CERT_BASE64}}
        CSC_KEY_PASSWORD: ${{secrets.CSC_KEY_PASSWORD}}
    - name: Create release [tag only]
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      with:
        files: |
          electron-app\dist\*.exe
          electron-app\dist\*.blockmap
          electron-app\dist\latest.yml
